version: '3.9'

services:
  web:
    build: 
      context: src/
      dockerfile: Dockerfile.prod
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/book-site/staticfiles
      - media_volume:/usr/src/book-site/mediafiles
    expose:
      - 8000
    depends_on:
      - db
    networks:
      - djangonetwork

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
      - static_volume:/usr/src/book-site/staticfiles
      - media_volume:/usr/src/book-site/mediafiles
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot

    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    networks:
      - djangonetwork

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    depends_on:
      - nginx
    command: >-
             certonly --reinstall --webroot --webroot-path=/var/www/certbot
             --email asd@gmail.com --agree-tos --no-eff-email
             -d bookify.banderosik.click
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot

  db:
    image: postgres:14-alpine3.16
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - djangonetwork

volumes:
  postgres_data:
  certs:
  certs-data:
  static_volume:
  media_volume:

networks:
  djangonetwork:
    driver: bridge
